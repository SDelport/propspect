@model List<InspectionAreaItem>
@section styles
{
    <style>
        #wrapper * {
            user-select: none;
            -moz-user-select: none;
            -khtml-user-select: none;
            -webkit-user-select: none;
            -o-user-select: none;
        }

        .signature-cell {
        }

        .signature {
            width: 100%;
            height: 200px;
        }
    </style>
}
<div id="wrapper">
    @foreach (var areaItem in Model)
    {

        <div class="row z-depth-1 long-container white">
            <form id="@areaItem.ItemDescription.ToLower().Replace(" ","")-form">
                <div class="col s12 m2">
                    <div class="col s12 propspect-blue-text"><h4>@areaItem.ItemDescription</h4></div>
                </div>
                <div class="col s12 m5">
                    <div class="input-field col s12">
                        <select name="condition">
                            <option @((areaItem.ItemCondition.ToLower() == "excellent") ?"selected":"")>1. Excellent</option>
                            <option @((areaItem.ItemCondition.ToLower() == "good") ?"selected":"")>2. Good</option>
                            <option @((areaItem.ItemCondition.ToLower() == "average") ?"selected":"")>3. Average</option>
                            <option @((areaItem.ItemCondition.ToLower() == "bad") ?"selected":"")>4. Bad</option>
                            <option @((areaItem.ItemCondition.ToLower() == "very bad") ?"selected":"")>5. Very Bad</option>
                            <option @((areaItem.ItemCondition.ToLower() == "n/a") ?"selected":"")>6. N/A</option>
                    </select>

                </div>

                <div class="col s12">
                        <input type="hidden" name="name" value="@areaItem.ItemDescription" />
                        <div class="file-field input-field">
                            <div class="btn propspect-blue-background">
                                <span>Image</span>
                                <input type="file">
                            </div>
                            <div class="file-path-wrapper">
                                <input class="file-path validate" type="text" name="file">
                            </div>
                        </div>
                    </div>
                    <div class="col s12">
                        <span class="col s6">Repair needed?</span>
                        <div class="switch">
                            <label>
                                No
                                <input type="checkbox" name="repair-needed" @((areaItem.ItemRepair.ToLower() == "yes") ?"checked":"")>
                                <span class="lever"></span>
                                Yes
                            </label>
                        </div>
                    </div>
                </div>

                <div class="col s12 m5 verticalLine-left">
                    <div class="col s8 propspect-blue-text "><h4>Signature</h4></div>
                    <a id="@areaItem.ItemDescription.ToLower().Replace(" ","")-clear" class="btn-floating btn-large waves-effect waves-light right propspect-blue-background "><i class="material-icons">not_interested</i></a>
                    <br />
                    <a id="@areaItem.ItemDescription.ToLower().Replace(" ","")-submit" data-part="@areaItem.ItemDescription" class="btn-floating btn-large waves-effect waves-light right propspect-blue-background over-content">Done</a>
                    <div class="signature-cell">
                        <canvas id="@areaItem.ItemDescription.ToLower().Replace(" ","")" class="signature"></canvas>
                    </div>

                </div>
            </form>
        </div>
    }
</div>

@section scripts
{
    <script src="~/Content/Scripts/signature_pad.min.js"></script>
    <script>
        var canvas = $('.signature');
        var k;
        $(canvas).each(function (i, e) {
            var signaturePad = new SignaturePad(e,
                {
                    minWidth: 0.3,
                    maxWidth: 1.5
                });
            $('#' + $(e).attr("id") + '-clear').click(function () {
                signaturePad.clear();
            })

            $('#' + $(e).attr("id") + '-submit').click(function (ev) {
                submitItem($(ev.target).attr('data-part'), $(e).attr("id"), signaturePad);
            })
            k = signaturePad;
        })

        $(window).load(function () {

            select_refresh('select');
        });

        function resizeCanvas() {
            $(canvas).each(function (i, e) {
                var ratio = Math.max(window.devicePixelRatio || 1, 1);
                e.width = e.offsetWidth * ratio;
                e.height = e.offsetHeight * ratio;
                e.getContext("2d").scale(ratio, ratio);
            });
        }

        window.onresize = resizeCanvas;
        resizeCanvas();

        function submitItem(name, variablename, signature) {
            $.ajax(
            {
                url: 'inspection/submitpart',
                data: JSON.stringify({
                    Data: $('#' + variablename + '-form').serializeArray(),
                    Signature: signature.toDataURL("image/jpeg")
                }),
                type: "POST",
                context: this,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    successmethod(result);
                },
                error: function (result) {
                    alert("An error occured")
                    console.log(result)
                }
            }
            );
        }
    </script>

}
