@model ListAsyncFormModel

@{
    MvcHtmlString ItemsPropertyName = new MvcHtmlString(Model.Control.VariableName + "Items");
    MvcHtmlString TemplatePropertyName = new MvcHtmlString(Model.Control.VariableName + "Template");
}


<div class="long-container white z-depth-1 knockout-search" data-bindname="@Model.Control.VariableName">
    <div class="propspect-blue-background z-depth-1">
        <div class="">
            <h3 class="center white-text padding-2">LandLords</h3>
        </div>
    </div>
    <div class="row">
        <div class="col s12">
            <table class="highlight bordered">
                <thead>
                    <tr>
                        @foreach (var header in Model.Control.Headers)
                        {
                            <th> @header.Label</th>
                        }
                        <th><a data-bind="click:Add" class="btn-floating waves-effect waves-light propspect-blue-background tooltipped" data-position="right" data-delay="50" data-tooltip="Add"><i class="material-icons">add</i></a></th>
                    </tr>
                </thead>
                <tbody class="font-12" data-bind="foreach: Items">
                    <tr>
                        @foreach (var header in Model.Control.Headers)
                        {
                            if (header.UseSource)
                            {
                                <td data-bind="text:  $root.GetSource('@header.Source',$data.@(header.VariableName)())  "></td>
                            }
                            else
                            {
                        <td data-bind="text: @header.VariableName"></td>
                            }

                        }
                        <td><a data-bind="click: Edit">Edit</a></td>
                    </tr>
                </tbody>
            </table>

        </div>
    </div>
</div>
<script>
    var @ItemsPropertyName= @Model.EncodedItems;
    var @TemplatePropertyName= @Model.EncodedTemplate;
    var DropdownItems = {};
    @foreach (var list in Model.ItemLists)
    {
        @Html.Raw("DropdownItems."+ list.Key + " = " + Json.Encode( list.Value));
    }
</script>


<div id="edit-modal-@Model.Control.HtmlID" class="modal modal-fixed-footer knockout-edit modal-tall-wide" data-bindname="@Model.Control.VariableName">
    @*Need fixed header with content: Add/Edit @Model.Control.Label*@
    <div class="modal-content">
        <h4 class="modal-header">Add/Edit @Model.Control.Label</h4>
        <form class="col s12">
            <div class="row">
                @foreach (var field in Model.Control.EditControls)
                {
                    @Form.RenderTemplate(field, field.Type.ToString())
                }
            </div>
        </form>
    </div>
    <div class="modal-footer modal-foot">
        <div class="progress no-margin-border" data-bind="css: {hide:IsLoading()}">
            <div class="indeterminate"></div>
        </div>       
        <a data-bind="click:Save" class=" modal-action waves-effect waves-green btn-flat">Save</a>
        <a class=" modal-action modal-close waves-effect waves-red btn-flat">Don't Save</a>
    </div>
</div>
